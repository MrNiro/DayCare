/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.neu.csye6200.view.ui.admin;

import edu.neu.csye6200.controller.SchoolController;
import edu.neu.csye6200.controller.StudentController;
import edu.neu.csye6200.controller.TeacherController;
import edu.neu.csye6200.model.Student;
import edu.neu.csye6200.model.Teacher;
import edu.neu.csye6200.utils.AutoAssignUtil;
import edu.neu.csye6200.utils.ConvertUtil;

import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nagashreeseshadri
 */
public class TeacherJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TeacherJPanel
     */
    private JPanel userProcessContainer;

    public TeacherJPanel(JPanel userProcessContainer) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTeacherInfoHeading = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblFirstName1 = new javax.swing.JLabel();
        txtFirstName1 = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtTeacherAddress = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnCSVUpload = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblFirstName2 = new javax.swing.JLabel();
        txtFirstName2 = new javax.swing.JTextField();
        lblPhoneNumber = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        lblFirstName3 = new javax.swing.JLabel();
        txtFirstName3 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        lblTeacherInfoHeading.setText("Teacher Information");

        lblFirstName.setText("First Name:");

        lblFirstName1.setText("Last Name:");

        lblAge.setText("Date of Birth:");

        lblAddress.setText("Address:");

        btnView.setText("View");

        btnAdd.setText("Add");

        btnUpdate.setText("Update");

        btnDelete.setText("Delete");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Teacher ID", "First Name", "Last Name", "Date of Birth", "Email", "Address", "Phone Number", "Rating"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        btnCSVUpload.setText("Upload CSV");

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblFirstName2.setText("Email:");

        lblPhoneNumber.setText("Phone Number:");

        lblFirstName3.setText("Parent Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnBack)
                        .addGap(285, 285, 285)
                        .addComponent(lblTeacherInfoHeading))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 992, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFirstName3)
                                        .addGap(6, 6, 6)
                                        .addComponent(txtFirstName3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblFirstName1)
                                            .addComponent(lblFirstName))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtFirstName1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(88, 88, 88)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPhoneNumber)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblAge)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(23, 23, 23)))
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFirstName2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFirstName2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblAddress)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTeacherAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addComponent(btnView)
                                .addGap(63, 63, 63)
                                .addComponent(btnAdd)
                                .addGap(75, 75, 75)
                                .addComponent(btnUpdate)
                                .addGap(69, 69, 69)
                                .addComponent(btnDelete))
                            .addComponent(btnCSVUpload))))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnCSVUpload, btnDelete, btnUpdate, btnView});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtFirstName, txtFirstName1, txtFirstName3});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtFirstName2, txtPhoneNumber});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(btnBack))
                    .addComponent(lblTeacherInfoHeading))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblAge)
                                .addComponent(lblAddress)
                                .addComponent(txtTeacherAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblFirstName)
                                .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFirstName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(lblFirstName1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblPhoneNumber)
                                .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFirstName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblFirstName2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFirstName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(lblFirstName3)))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCSVUpload)
                            .addComponent(btnView)
                            .addComponent(btnAdd)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(130, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(ActionEvent e) {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        model.fireTableDataChanged();
        populateTable();
    }

    private void btnDeleteActionPerformed(ActionEvent e) {
        int selectedRowIndex = jTable2.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        long teacherId = ConvertUtil.stringToLong(model.getValueAt(selectedRowIndex, 0).toString());
        TeacherController teacherController = new TeacherController();
        teacherController.deleteTeacher(teacherId);
        ((DefaultTableModel) jTable2.getModel()).fireTableDataChanged();
        btnRefreshActionPerformed(e);
    }

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String firstName = txtFirstName.getText();
        String lastName = txtLastName.getText();
        String address = txtAddress.getText();
        String email = txtEmail.getText();
        String parentName = txtParentName.getText();
        String phoneNumber = txtPhoneNumber.getText();
        Date dob = jDateChooser1.getDate();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        LocalDate dateOfBirth = ConvertUtil.stringtoLocalDate(dateFormat.format(dob));
        try {
            if(firstName == null || firstName.isEmpty()){
                throw new NullPointerException("First Name field cannot be Empty !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "First Name field cannot be Empty !!!");
            return;
        }

        try {
            if(lastName == null || lastName.isEmpty()){
                throw new NullPointerException("Last Name field cannot be Empty !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Last Name field cannot be Empty !!!");
            return;
        }

        try {
            if(address == null || address.isEmpty()){
                throw new NullPointerException("Address field cannot be Empty !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Address field cannot be Empty !!!");
            return;
        }

        try {
            if(email == null || email.isEmpty()){
                throw new NullPointerException("Email field cannot be Empty !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Email field cannot be Empty !!!");
            return;
        }

        try {
            if(parentName == null || parentName.isEmpty()){
                throw new NullPointerException("Parent Name field cannot be Empty !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Parent Name field cannot be Empty !!!");
            return;
        }

        try {
            if(phoneNumber == null || phoneNumber.isEmpty()){
                throw new NullPointerException("Parent Phone Number field cannot be Empty !!!");
            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Parent Phone Number field cannot be Empty !!!");
            return;
        }

        Teacher teacher = new Teacher(firstName, lastName, address, dateOfBirth, email, ConvertUtil.stringToLong(phoneNumber), parentName);
//        DefaultTableModel model = (DefaultTableModel) tblStudentInfo.getModel();
        TeacherController teacherController = new TeacherController();
        List<Teacher> teachers = teacherController.getAllTeachers();
        long lastTeachId = teachers.get(teachers.size() - 1).getTeacherId();
        //TODO: Assign Teacher to group
        teacher.setTeacherId(lastTeachId + 1);
        teacherController.addTeacher(teacher);
        btnRefreshActionPerformed(evt);
    }

    private void btnPopulateTableActionPerformed(ActionEvent evt){
        populateTable();
    }

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        int row = jTable2.getSelectedRow();
//        long teacherId = ConvertUtil.stringToLong(jTable2.getModel().getValueAt(row, 0).toString());
//        String firstName = jTable2.getModel().getValueAt(row, 1).toString();
//        String lastName = jTable2.getModel().getValueAt(row, 2).toString();
//        String address = jTable2.getModel().getValueAt(row, 3).toString();
//        String email = jTable2.getModel().getValueAt(row, 4).toString();
//        String parentName = jTable2.getModel().getValueAt(row, 5).toString();
//        String phoneNumber = jTable2.getModel().getValueAt(row, 6).toString();
//        Date dob = ConvertUtil.stringToDate(jTable2.getModel().getValueAt(row, 5).toString());
//        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
//        LocalDate dateOfBirth = ConvertUtil.stringtoLocalDate(dateFormat.format(dob));
//        try {
//            if(firstName == null || firstName.isEmpty()){
//                throw new NullPointerException("First Name field cannot be Empty !!!");
//            }
//        } catch(NullPointerException e){
//            JOptionPane.showMessageDialog(null, "First Name field cannot be Empty !!!");
//            return;
//        }
//
//        try {
//            if(lastName == null || lastName.isEmpty()){
//                throw new NullPointerException("Last Name field cannot be Empty !!!");
//            }
//        } catch(NullPointerException e){
//            JOptionPane.showMessageDialog(null, "Last Name field cannot be Empty !!!");
//            return;
//        }
//
//        try {
//            if(address == null || address.isEmpty()){
//                throw new NullPointerException("Address field cannot be Empty !!!");
//            }
//        } catch(NullPointerException e){
//            JOptionPane.showMessageDialog(null, "Address field cannot be Empty !!!");
//            return;
//        }
//
//        try {
//            if(email == null || email.isEmpty()){
//                throw new NullPointerException("Email field cannot be Empty !!!");
//            }
//        } catch(NullPointerException e){
//            JOptionPane.showMessageDialog(null, "Email field cannot be Empty !!!");
//            return;
//        }
//
//        try {
//            if(parentName == null || parentName.isEmpty()){
//                throw new NullPointerException("Parent Name field cannot be Empty !!!");
//            }
//        } catch(NullPointerException e){
//            JOptionPane.showMessageDialog(null, "Parent Name field cannot be Empty !!!");
//            return;
//        }
//
//        try {
//            if(phoneNumber == null || phoneNumber.isEmpty()){
//                throw new NullPointerException("Parent Phone Number field cannot be Empty !!!");
//            }
//        } catch(NullPointerException e){
//            JOptionPane.showMessageDialog(null, "Parent Phone Number field cannot be Empty !!!");
//            return;
//        }
//        Teacher teacher = new Teacher(firstName, lastName, address, dateOfBirth, email, ConvertUtil.stringToLong(phoneNumber), parentName);
////        DefaultTableModel model = (DefaultTableModel) tblStudentInfo.getModel();
//        TeacherController teacherController = new TeacherController();
//        //TODO: Assign Teacher to group
//        teacherController.updateTeacher(teacher);
//        btnRefreshActionPerformed(evt);
//        SchoolController schoolController = new SchoolController();
//        schoolController.rateAllTeachers();
        btnRefreshActionPerformed(evt);
    }//GEN-LAST:event_btnAddActionPerformed

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        TeacherController controller = new TeacherController();
        List<Teacher> teachers = controller.getAllTeachers();
        for(Teacher teacher: teachers){
            String teacherId = ConvertUtil.longToString(teacher.getTeacherId());
            String firstName = teacher.getFirstName();
            String lastName = teacher.getLastName();
            String dateOfBirth = ConvertUtil.dateToString(teacher.getDateOfBirth());
            String email = teacher.getEmail();
            String phoneNumber = ConvertUtil.longToString(teacher.getPhoneNum());
            String address = teacher.getAddress();
            String rating = ConvertUtil.doubleToString(teacher.getRating());
            if(rating.length() > 4){
                rating = rating.substring(0, 4);
            }
            Object[] row = {teacherId, firstName, lastName, dateOfBirth, email, address, phoneNumber, rating};
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCSVUpload;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblFirstName1;
    private javax.swing.JLabel lblFirstName2;
    private javax.swing.JLabel lblFirstName3;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblTeacherInfoHeading;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtFirstName1;
    private javax.swing.JTextField txtFirstName2;
    private javax.swing.JTextField txtFirstName3;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtTeacherAddress;
    // End of variables declaration//GEN-END:variables
}
